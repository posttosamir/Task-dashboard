{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samir\\\\React projects\\\\Project1\\\\project3\\\\simple_projects\\\\src\\\\App.js\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Main from \"./layout/Main/Main\";\nimport ErrorBoundary from \"./components/Error/ErrorBoundary\";\nimport React from \"react\";\nimport \"./styels.css\";\nimport DisplayButton from \"./components/Task1/DisplayButton\";\nimport ToDoList from \"./components/Task2/ToDoList\";\nimport { config } from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return (\n    /*#__PURE__*/\n    //---------------way - 1 -----------------------------------------------------\n    //---------------way - 1 -----------------------------------------------------\n    //---------------way - 1 -----------------------------------------------------\n    // <div>\n    //   <Routes>\n    //     <Route element={<Main />} path=\"/\">\n    //       <Route Component={DisplayButton} path=\"/display\"></Route>\n    //       {/* we can also write element instead of Component , Component just do not require `\"<\"\"/>\"` brackets. */}\n    //       <Route Component={ToDoList} path=\"/todolist\"></Route>\n    //       <Route Component={DisplayButton} path=\"/display\"></Route>\n    //     </Route>\n    //   </Routes>\n    // </div>\n    //---------------way - 2 -----------------------------------------------------\n    //-we can store the data in config file and run map\n    //---------------way - 1 -----------------------------------------------------\n    _jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            Component: Main,\n            children: [config.map(ele => {\n              return /*#__PURE__*/_jsxDEV(Route, {\n                Component: ele.Component,\n                path: ele.path\n              }, ele.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              Component: DisplayButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              element: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Page is not Avaialable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","Main","ErrorBoundary","React","DisplayButton","ToDoList","config","jsxDEV","_jsxDEV","App","children","Component","map","ele","path","id","fileName","_jsxFileName","lineNumber","columnNumber","element","_c","$RefreshReg$"],"sources":["C:/Users/Samir/React projects/Project1/project3/simple_projects/src/App.js"],"sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport Main from \"./layout/Main/Main\";\nimport ErrorBoundary from \"./components/Error/ErrorBoundary\";\n\nimport React from \"react\";\nimport \"./styels.css\";\nimport DisplayButton from \"./components/Task1/DisplayButton\";\nimport ToDoList from \"./components/Task2/ToDoList\";\n\nimport { config } from \"./config\";\nfunction App() {\n  return (\n    //---------------way - 1 -----------------------------------------------------\n    //---------------way - 1 -----------------------------------------------------\n    //---------------way - 1 -----------------------------------------------------\n    // <div>\n    //   <Routes>\n    //     <Route element={<Main />} path=\"/\">\n    //       <Route Component={DisplayButton} path=\"/display\"></Route>\n    //       {/* we can also write element instead of Component , Component just do not require `\"<\"\"/>\"` brackets. */}\n    //       <Route Component={ToDoList} path=\"/todolist\"></Route>\n    //       <Route Component={DisplayButton} path=\"/display\"></Route>\n    //     </Route>\n    //   </Routes>\n    // </div>\n\n    //---------------way - 2 -----------------------------------------------------\n    //-we can store the data in config file and run map\n    //---------------way - 1 -----------------------------------------------------\n    <ErrorBoundary>\n      <div>\n        <Routes>\n          <Route Component={Main}>\n            {config.map((ele) => {\n              return (\n                <Route\n                  key={ele.id}\n                  Component={ele.Component}\n                  path={ele.path}\n                ></Route>\n              );\n            })}\n\n            {/* for \"/\"  */}\n            <Route path=\"/\" Component={DisplayButton} />\n            <Route path=\"*\" element={<div>Page is not Avaialable</div>} />\n          </Route>\n        </Routes>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,aAAa,MAAM,kCAAkC;AAE5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,OAAOC,QAAQ,MAAM,6BAA6B;AAElD,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,SAASC,GAAGA,CAAA,EAAG;EACb;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACAD,OAAA,CAACN,aAAa;MAAAQ,QAAA,eACZF,OAAA;QAAAE,QAAA,eACEF,OAAA,CAACR,MAAM;UAAAU,QAAA,eACLF,OAAA,CAACT,KAAK;YAACY,SAAS,EAAEV,IAAK;YAAAS,QAAA,GACpBJ,MAAM,CAACM,GAAG,CAAEC,GAAG,IAAK;cACnB,oBACEL,OAAA,CAACT,KAAK;gBAEJY,SAAS,EAAEE,GAAG,CAACF,SAAU;gBACzBG,IAAI,EAAED,GAAG,CAACC;cAAK,GAFVD,GAAG,CAACE,EAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGL,CAAC;YAEb,CAAC,CAAC,eAGFX,OAAA,CAACT,KAAK;cAACe,IAAI,EAAC,GAAG;cAACH,SAAS,EAAEP;YAAc;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5CX,OAAA,CAACT,KAAK;cAACe,IAAI,EAAC,GAAG;cAACM,OAAO,eAAEZ,OAAA;gBAAAE,QAAA,EAAK;cAAsB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;AAEpB;AAACE,EAAA,GAzCQZ,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}